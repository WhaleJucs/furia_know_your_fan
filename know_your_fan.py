import streamlit as st
import re  # Importa a biblioteca de express√µes regulares

st.title("Know Your Fan - Coleta de Dados")

st.subheader("Informa√ß√µes Pessoais")
nome = st.text_input("Nome Completo")
endereco = st.text_area("Endere√ßo")
cpf = st.text_input("CPF")
idade = st.selectbox("Faixa de idade", ["Menos de 18", "18-24", "25-34", "35-44", "45 anos ou mais"])
genero = st.selectbox("G√™nero", ["Masculino", "Feminino", "N√£o bin√°rio", "Outro", "Prefiro n√£o dizer"])

# Para manter o estado dos multiselects e radio buttons
if "interesses" not in st.session_state:
    st.session_state["interesses"] = []
if "atividades" not in st.session_state:
    st.session_state["atividades"] = []
if "streamers" not in st.session_state:
    st.session_state["streamers"] = []
if "eventos" not in st.session_state:
    st.session_state["eventos"] = ""
if "compras" not in st.session_state:
    st.session_state["compras"] = []

st.subheader("Interesses, Atividades, Eventos e Compras no √∫ltimo ano")
jogos_competitivos_opcoes = ["Counter-Strike", "League of Legends", "VALORANT", "Dota 2", "Rainbow Six Siege", "Rocket League", "Kings League", "Outros"]
interesses = st.multiselect("Quais jogos do cen√°rio competitivo voc√™ costuma acompanhar?", jogos_competitivos_opcoes)
atividades = st.multiselect("Quais jogos voc√™ costuma jogar?", jogos_competitivos_opcoes)
streamers = st.text_area("Quais streamers voc√™ acompanha?")
eventos = st.radio("Voc√™ acompanhou ou participou de eventos de esports no √∫ltimo ano?", ["Sim, participei", "Sim, apenas assisti online", "Sim, participei e assisti online", "N√£o"])
compras = st.multiselect("Voc√™ fez alguma compra relacionada a esports no ultimo ano?", ["Sim, roupas e acessorios", "Sim, skins/bundle virtuais", "Sim, outros", "N√£o"])

st.subheader("Upload de Documento (Opcional)")
documento = st.file_uploader("Fa√ßa o upload de um documento (ex: RG)")
if documento is not None:
    st.write("Documento carregado:", documento.name)
    if st.button("Simular Valida√ß√£o do Documento"):
        # L√≥gica de valida√ß√£o IA para o documento,
        # como verificar o tipo do arquivo (se permitido) ou exibir mensagens diferentes.
        st.success("Documento validado com sucesso (simula√ß√£o)!")

st.subheader("Vincular Redes Sociais (Simula√ß√£o)")
col1, col2, col3, col4 = st.columns(4)
with col1:
    if st.button("üê¶ Twitter"):
        st.info("Simulando pedido de permiss√£o para acessar dados do Twitter...")
        st.write("Permiss√£o concedida (simula√ß√£o). Lendo dados...")
        st.write("- Intera√ß√µes recentes com a FURIA: [Simulado]")
        # Adicione aqui mais informa√ß√µes simuladas do Twitter
with col2:
    if st.button("üì∏ Instagram"):
        st.info("Simulando pedido de permiss√£o para acessar dados do Instagram...")
        st.write("Permiss√£o concedida (simula√ß√£o). Lendo dados...")
        st.write("- P√°ginas da FURIA seguidas: [Simulado]")
        # Adicione aqui mais informa√ß√µes simuladas do Instagram
with col3:
    if st.button("üü£ Twitch"):
        st.info("Simulando pedido de permiss√£o para acessar dados do Twitch...")
        st.write("Permiss√£o concedida (simula√ß√£o). Lendo dados...")
        st.write("- Canais da FURIA seguidos: [Simulado]")
        # Adicione aqui mais informa√ß√µes simuladas do Twitch
with col4:
    if st.button("üé∂ Tiktok"):
        st.info("Simulando pedido de permiss√£o para acessar dados do TikTok...")
        st.write("Permiss√£o concedida (simula√ß√£o). Lendo dados...")
        st.write("- Canais da FURIA seguidos: [Simulado]")
        # Adicione aqui mais informa√ß√µes simuladas do TikTok

st.subheader("Validar Links de Perfis da FURIA (Simula√ß√£o)")
link_perfil = st.text_input("Link do seu perfil no site FURIA:")
if st.button("Simular Valida√ß√£o do Link"):
    if link_perfil:
        st.info(f"Simulando a an√°lise do link: {link_perfil}...")
        # L√≥gica de simula√ß√£o para verificar
        # se o link parece ser de um site da furia e se o
        # conte√∫do simulado √© relevante para o perfil de um f√£.
        if "furia" in link_perfil.lower() or "cstrike" in link_perfil.lower():
            st.success("Link validado! Conte√∫do relevante para o perfil de um f√£ de FURIA.")
        else:
            st.warning("Link validado (simula√ß√£o), mas o conte√∫do pode n√£o ser altamente relevante para a FURIA.")
    else:
        st.warning("Por favor, cole um link de perfil.")

if st.button("Enviar Dados"):
    erros = []
    if not nome:
        erros.append("O nome √© obrigat√≥rio.")
    if not endereco:
        erros.append("O endere√ßo √© obrigat√≥rio.")
    if not cpf:
        erros.append("O CPF √© obrigat√≥rio.")
    elif not re.match(r'^\d{11}$', cpf):
        erros.append("O CPF deve conter 11 d√≠gitos num√©ricos.")

    if erros:
        for erro in erros:
            st.error(erro)
    else:
        dados = {
            "Nome": nome,
            "Endere√ßo": endereco,
            "CPF": cpf,
            "Faixa de idade": idade,
            "G√™nero": genero,
            "Interesses": st.session_state.get("interesses", []),
            "Atividades": st.session_state.get("atividades", []),
            "Streamers": st.session_state.get("streamers", []),
            "Eventos": st.session_state.get("eventos", ""),
            "Compras": st.session_state.get("compras", [])
        }
        st.write("Dados Coletados:")
        st.json(dados)
        st.success("Coleta de dados bem sucedida!")